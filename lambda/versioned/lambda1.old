

resource "aws_lambda_function" "hello_world" {
  filename         = "lambda/lambda1/lambda.zip" # Replace with your actual zip file
  function_name    = "hello-world"
  role             = aws_iam_role.lambda_role.arn
  handler          = "lambda_function.lambda_handler" # Python handler: file.function
  runtime          = "python3.9" # Change to your desired Python version
  source_code_hash = filebase64sha256(data.archive_file.hello_world_function.output_path)
  publish          = true # This ensures a new version is published

  tags = {
      Name = "Steve-lambda"
  }
}

resource "aws_lambda_alias" "hello_world_stage" {
  name             = "staging" # Alias name
  function_name    = aws_lambda_function.hello_world.function_name
  function_version = aws_lambda_function.hello_world.version
}


# We have to give permission to the lambda alias's
resource "aws_lambda_permission" "preProd_invoke" {

  depends_on = [ aws_lambda_alias.hello_world_stage ]
  statement_id  = "AllowExecutionFromAPIGateway"
  action        = "lambda:InvokeFunction"
  function_name = "${aws_lambda_function.hello_world.function_name}:staging"
  principal     = "apigateway.amazonaws.com"
  source_arn    = "${aws_api_gateway_rest_api.steve_api.execution_arn}/*/GET/${aws_lambda_function.hello_world.function_name}"
}

data "archive_file" "hello_world_function" {
  type        = "zip"
  source_dir  = "${path.module}/lambda/lambda1"
  output_path = "${path.module}/lambda/lambda1/lambda.zip"
}